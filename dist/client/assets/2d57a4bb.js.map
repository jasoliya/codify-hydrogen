{"version":3,"file":"2d57a4bb.js","sources":["../../../node_modules/@shopify/hydrogen/dist/esnext/storefront-api-types.js","../../../node_modules/@shopify/hydrogen/dist/esnext/components/CartProvider/context.js"],"sourcesContent":["/** The set of valid sort keys for the Article query. */\nexport var ArticleSortKeys;\n(function (ArticleSortKeys) {\n    /** Sort by the `author` value. */\n    ArticleSortKeys[\"Author\"] = \"AUTHOR\";\n    /** Sort by the `blog_title` value. */\n    ArticleSortKeys[\"BlogTitle\"] = \"BLOG_TITLE\";\n    /** Sort by the `id` value. */\n    ArticleSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `published_at` value. */\n    ArticleSortKeys[\"PublishedAt\"] = \"PUBLISHED_AT\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    ArticleSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `title` value. */\n    ArticleSortKeys[\"Title\"] = \"TITLE\";\n    /** Sort by the `updated_at` value. */\n    ArticleSortKeys[\"UpdatedAt\"] = \"UPDATED_AT\";\n})(ArticleSortKeys || (ArticleSortKeys = {}));\n/** The set of valid sort keys for the Blog query. */\nexport var BlogSortKeys;\n(function (BlogSortKeys) {\n    /** Sort by the `handle` value. */\n    BlogSortKeys[\"Handle\"] = \"HANDLE\";\n    /** Sort by the `id` value. */\n    BlogSortKeys[\"Id\"] = \"ID\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    BlogSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `title` value. */\n    BlogSortKeys[\"Title\"] = \"TITLE\";\n})(BlogSortKeys || (BlogSortKeys = {}));\n/** Card brand, such as Visa or Mastercard, which can be used for payments. */\nexport var CardBrand;\n(function (CardBrand) {\n    /** American Express. */\n    CardBrand[\"AmericanExpress\"] = \"AMERICAN_EXPRESS\";\n    /** Diners Club. */\n    CardBrand[\"DinersClub\"] = \"DINERS_CLUB\";\n    /** Discover. */\n    CardBrand[\"Discover\"] = \"DISCOVER\";\n    /** JCB. */\n    CardBrand[\"Jcb\"] = \"JCB\";\n    /** Mastercard. */\n    CardBrand[\"Mastercard\"] = \"MASTERCARD\";\n    /** Visa. */\n    CardBrand[\"Visa\"] = \"VISA\";\n})(CardBrand || (CardBrand = {}));\n/** Possible error codes that can be returned by `CartUserError`. */\nexport var CartErrorCode;\n(function (CartErrorCode) {\n    /** The input value is invalid. */\n    CartErrorCode[\"Invalid\"] = \"INVALID\";\n    /** Merchandise line was not found in cart. */\n    CartErrorCode[\"InvalidMerchandiseLine\"] = \"INVALID_MERCHANDISE_LINE\";\n    /** The input value should be less than the maximum value allowed. */\n    CartErrorCode[\"LessThan\"] = \"LESS_THAN\";\n    /** Missing discount code. */\n    CartErrorCode[\"MissingDiscountCode\"] = \"MISSING_DISCOUNT_CODE\";\n    /** Missing note. */\n    CartErrorCode[\"MissingNote\"] = \"MISSING_NOTE\";\n})(CartErrorCode || (CartErrorCode = {}));\n/** Possible error codes that can be returned by `CheckoutUserError`. */\nexport var CheckoutErrorCode;\n(function (CheckoutErrorCode) {\n    /** Checkout is already completed. */\n    CheckoutErrorCode[\"AlreadyCompleted\"] = \"ALREADY_COMPLETED\";\n    /** Input email contains an invalid domain name. */\n    CheckoutErrorCode[\"BadDomain\"] = \"BAD_DOMAIN\";\n    /** The input value is blank. */\n    CheckoutErrorCode[\"Blank\"] = \"BLANK\";\n    /** Cart does not meet discount requirements notice. */\n    CheckoutErrorCode[\"CartDoesNotMeetDiscountRequirementsNotice\"] = \"CART_DOES_NOT_MEET_DISCOUNT_REQUIREMENTS_NOTICE\";\n    /** Customer already used once per customer discount notice. */\n    CheckoutErrorCode[\"CustomerAlreadyUsedOncePerCustomerDiscountNotice\"] = \"CUSTOMER_ALREADY_USED_ONCE_PER_CUSTOMER_DISCOUNT_NOTICE\";\n    /** Discount already applied. */\n    CheckoutErrorCode[\"DiscountAlreadyApplied\"] = \"DISCOUNT_ALREADY_APPLIED\";\n    /** Discount disabled. */\n    CheckoutErrorCode[\"DiscountDisabled\"] = \"DISCOUNT_DISABLED\";\n    /** Discount expired. */\n    CheckoutErrorCode[\"DiscountExpired\"] = \"DISCOUNT_EXPIRED\";\n    /** Discount limit reached. */\n    CheckoutErrorCode[\"DiscountLimitReached\"] = \"DISCOUNT_LIMIT_REACHED\";\n    /** Discount not found. */\n    CheckoutErrorCode[\"DiscountNotFound\"] = \"DISCOUNT_NOT_FOUND\";\n    /** Checkout is already completed. */\n    CheckoutErrorCode[\"Empty\"] = \"EMPTY\";\n    /** Queue token has expired. */\n    CheckoutErrorCode[\"ExpiredQueueToken\"] = \"EXPIRED_QUEUE_TOKEN\";\n    /** Gift card has already been applied. */\n    CheckoutErrorCode[\"GiftCardAlreadyApplied\"] = \"GIFT_CARD_ALREADY_APPLIED\";\n    /** Gift card code is invalid. */\n    CheckoutErrorCode[\"GiftCardCodeInvalid\"] = \"GIFT_CARD_CODE_INVALID\";\n    /** Gift card currency does not match checkout currency. */\n    CheckoutErrorCode[\"GiftCardCurrencyMismatch\"] = \"GIFT_CARD_CURRENCY_MISMATCH\";\n    /** Gift card has no funds left. */\n    CheckoutErrorCode[\"GiftCardDepleted\"] = \"GIFT_CARD_DEPLETED\";\n    /** Gift card is disabled. */\n    CheckoutErrorCode[\"GiftCardDisabled\"] = \"GIFT_CARD_DISABLED\";\n    /** Gift card is expired. */\n    CheckoutErrorCode[\"GiftCardExpired\"] = \"GIFT_CARD_EXPIRED\";\n    /** Gift card was not found. */\n    CheckoutErrorCode[\"GiftCardNotFound\"] = \"GIFT_CARD_NOT_FOUND\";\n    /** Gift card cannot be applied to a checkout that contains a gift card. */\n    CheckoutErrorCode[\"GiftCardUnusable\"] = \"GIFT_CARD_UNUSABLE\";\n    /** The input value should be greater than or equal to the minimum value allowed. */\n    CheckoutErrorCode[\"GreaterThanOrEqualTo\"] = \"GREATER_THAN_OR_EQUAL_TO\";\n    /** The input value is invalid. */\n    CheckoutErrorCode[\"Invalid\"] = \"INVALID\";\n    /** Cannot specify country and presentment currency code. */\n    CheckoutErrorCode[\"InvalidCountryAndCurrency\"] = \"INVALID_COUNTRY_AND_CURRENCY\";\n    /** Input Zip is invalid for country provided. */\n    CheckoutErrorCode[\"InvalidForCountry\"] = \"INVALID_FOR_COUNTRY\";\n    /** Input Zip is invalid for country and province provided. */\n    CheckoutErrorCode[\"InvalidForCountryAndProvince\"] = \"INVALID_FOR_COUNTRY_AND_PROVINCE\";\n    /** Invalid province in country. */\n    CheckoutErrorCode[\"InvalidProvinceInCountry\"] = \"INVALID_PROVINCE_IN_COUNTRY\";\n    /** Queue token is invalid. */\n    CheckoutErrorCode[\"InvalidQueueToken\"] = \"INVALID_QUEUE_TOKEN\";\n    /** Invalid region in country. */\n    CheckoutErrorCode[\"InvalidRegionInCountry\"] = \"INVALID_REGION_IN_COUNTRY\";\n    /** Invalid state in country. */\n    CheckoutErrorCode[\"InvalidStateInCountry\"] = \"INVALID_STATE_IN_COUNTRY\";\n    /** The input value should be less than the maximum value allowed. */\n    CheckoutErrorCode[\"LessThan\"] = \"LESS_THAN\";\n    /** The input value should be less than or equal to the maximum value allowed. */\n    CheckoutErrorCode[\"LessThanOrEqualTo\"] = \"LESS_THAN_OR_EQUAL_TO\";\n    /** Line item was not found in checkout. */\n    CheckoutErrorCode[\"LineItemNotFound\"] = \"LINE_ITEM_NOT_FOUND\";\n    /** Checkout is locked. */\n    CheckoutErrorCode[\"Locked\"] = \"LOCKED\";\n    /** Missing payment input. */\n    CheckoutErrorCode[\"MissingPaymentInput\"] = \"MISSING_PAYMENT_INPUT\";\n    /** Not enough in stock. */\n    CheckoutErrorCode[\"NotEnoughInStock\"] = \"NOT_ENOUGH_IN_STOCK\";\n    /** Input value is not supported. */\n    CheckoutErrorCode[\"NotSupported\"] = \"NOT_SUPPORTED\";\n    /** The input value needs to be blank. */\n    CheckoutErrorCode[\"Present\"] = \"PRESENT\";\n    /** Shipping rate expired. */\n    CheckoutErrorCode[\"ShippingRateExpired\"] = \"SHIPPING_RATE_EXPIRED\";\n    /** Throttled during checkout. */\n    CheckoutErrorCode[\"ThrottledDuringCheckout\"] = \"THROTTLED_DURING_CHECKOUT\";\n    /** The input value is too long. */\n    CheckoutErrorCode[\"TooLong\"] = \"TOO_LONG\";\n    /** The amount of the payment does not match the value to be paid. */\n    CheckoutErrorCode[\"TotalPriceMismatch\"] = \"TOTAL_PRICE_MISMATCH\";\n    /** Unable to apply discount. */\n    CheckoutErrorCode[\"UnableToApply\"] = \"UNABLE_TO_APPLY\";\n})(CheckoutErrorCode || (CheckoutErrorCode = {}));\n/** The set of valid sort keys for the Collection query. */\nexport var CollectionSortKeys;\n(function (CollectionSortKeys) {\n    /** Sort by the `id` value. */\n    CollectionSortKeys[\"Id\"] = \"ID\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    CollectionSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `title` value. */\n    CollectionSortKeys[\"Title\"] = \"TITLE\";\n    /** Sort by the `updated_at` value. */\n    CollectionSortKeys[\"UpdatedAt\"] = \"UPDATED_AT\";\n})(CollectionSortKeys || (CollectionSortKeys = {}));\n/**\n * The code designating a country/region, which generally follows ISO 3166-1 alpha-2 guidelines.\n * If a territory doesn't have a country code value in the `CountryCode` enum, it might be considered a subdivision\n * of another country. For example, the territories associated with Spain are represented by the country code `ES`,\n * and the territories associated with the United States of America are represented by the country code `US`.\n *\n */\nexport var CountryCode;\n(function (CountryCode) {\n    /** Ascension Island. */\n    CountryCode[\"Ac\"] = \"AC\";\n    /** Andorra. */\n    CountryCode[\"Ad\"] = \"AD\";\n    /** United Arab Emirates. */\n    CountryCode[\"Ae\"] = \"AE\";\n    /** Afghanistan. */\n    CountryCode[\"Af\"] = \"AF\";\n    /** Antigua & Barbuda. */\n    CountryCode[\"Ag\"] = \"AG\";\n    /** Anguilla. */\n    CountryCode[\"Ai\"] = \"AI\";\n    /** Albania. */\n    CountryCode[\"Al\"] = \"AL\";\n    /** Armenia. */\n    CountryCode[\"Am\"] = \"AM\";\n    /** Netherlands Antilles. */\n    CountryCode[\"An\"] = \"AN\";\n    /** Angola. */\n    CountryCode[\"Ao\"] = \"AO\";\n    /** Argentina. */\n    CountryCode[\"Ar\"] = \"AR\";\n    /** Austria. */\n    CountryCode[\"At\"] = \"AT\";\n    /** Australia. */\n    CountryCode[\"Au\"] = \"AU\";\n    /** Aruba. */\n    CountryCode[\"Aw\"] = \"AW\";\n    /** Åland Islands. */\n    CountryCode[\"Ax\"] = \"AX\";\n    /** Azerbaijan. */\n    CountryCode[\"Az\"] = \"AZ\";\n    /** Bosnia & Herzegovina. */\n    CountryCode[\"Ba\"] = \"BA\";\n    /** Barbados. */\n    CountryCode[\"Bb\"] = \"BB\";\n    /** Bangladesh. */\n    CountryCode[\"Bd\"] = \"BD\";\n    /** Belgium. */\n    CountryCode[\"Be\"] = \"BE\";\n    /** Burkina Faso. */\n    CountryCode[\"Bf\"] = \"BF\";\n    /** Bulgaria. */\n    CountryCode[\"Bg\"] = \"BG\";\n    /** Bahrain. */\n    CountryCode[\"Bh\"] = \"BH\";\n    /** Burundi. */\n    CountryCode[\"Bi\"] = \"BI\";\n    /** Benin. */\n    CountryCode[\"Bj\"] = \"BJ\";\n    /** St. Barthélemy. */\n    CountryCode[\"Bl\"] = \"BL\";\n    /** Bermuda. */\n    CountryCode[\"Bm\"] = \"BM\";\n    /** Brunei. */\n    CountryCode[\"Bn\"] = \"BN\";\n    /** Bolivia. */\n    CountryCode[\"Bo\"] = \"BO\";\n    /** Caribbean Netherlands. */\n    CountryCode[\"Bq\"] = \"BQ\";\n    /** Brazil. */\n    CountryCode[\"Br\"] = \"BR\";\n    /** Bahamas. */\n    CountryCode[\"Bs\"] = \"BS\";\n    /** Bhutan. */\n    CountryCode[\"Bt\"] = \"BT\";\n    /** Bouvet Island. */\n    CountryCode[\"Bv\"] = \"BV\";\n    /** Botswana. */\n    CountryCode[\"Bw\"] = \"BW\";\n    /** Belarus. */\n    CountryCode[\"By\"] = \"BY\";\n    /** Belize. */\n    CountryCode[\"Bz\"] = \"BZ\";\n    /** Canada. */\n    CountryCode[\"Ca\"] = \"CA\";\n    /** Cocos (Keeling) Islands. */\n    CountryCode[\"Cc\"] = \"CC\";\n    /** Congo - Kinshasa. */\n    CountryCode[\"Cd\"] = \"CD\";\n    /** Central African Republic. */\n    CountryCode[\"Cf\"] = \"CF\";\n    /** Congo - Brazzaville. */\n    CountryCode[\"Cg\"] = \"CG\";\n    /** Switzerland. */\n    CountryCode[\"Ch\"] = \"CH\";\n    /** Côte d’Ivoire. */\n    CountryCode[\"Ci\"] = \"CI\";\n    /** Cook Islands. */\n    CountryCode[\"Ck\"] = \"CK\";\n    /** Chile. */\n    CountryCode[\"Cl\"] = \"CL\";\n    /** Cameroon. */\n    CountryCode[\"Cm\"] = \"CM\";\n    /** China. */\n    CountryCode[\"Cn\"] = \"CN\";\n    /** Colombia. */\n    CountryCode[\"Co\"] = \"CO\";\n    /** Costa Rica. */\n    CountryCode[\"Cr\"] = \"CR\";\n    /** Cuba. */\n    CountryCode[\"Cu\"] = \"CU\";\n    /** Cape Verde. */\n    CountryCode[\"Cv\"] = \"CV\";\n    /** Curaçao. */\n    CountryCode[\"Cw\"] = \"CW\";\n    /** Christmas Island. */\n    CountryCode[\"Cx\"] = \"CX\";\n    /** Cyprus. */\n    CountryCode[\"Cy\"] = \"CY\";\n    /** Czechia. */\n    CountryCode[\"Cz\"] = \"CZ\";\n    /** Germany. */\n    CountryCode[\"De\"] = \"DE\";\n    /** Djibouti. */\n    CountryCode[\"Dj\"] = \"DJ\";\n    /** Denmark. */\n    CountryCode[\"Dk\"] = \"DK\";\n    /** Dominica. */\n    CountryCode[\"Dm\"] = \"DM\";\n    /** Dominican Republic. */\n    CountryCode[\"Do\"] = \"DO\";\n    /** Algeria. */\n    CountryCode[\"Dz\"] = \"DZ\";\n    /** Ecuador. */\n    CountryCode[\"Ec\"] = \"EC\";\n    /** Estonia. */\n    CountryCode[\"Ee\"] = \"EE\";\n    /** Egypt. */\n    CountryCode[\"Eg\"] = \"EG\";\n    /** Western Sahara. */\n    CountryCode[\"Eh\"] = \"EH\";\n    /** Eritrea. */\n    CountryCode[\"Er\"] = \"ER\";\n    /** Spain. */\n    CountryCode[\"Es\"] = \"ES\";\n    /** Ethiopia. */\n    CountryCode[\"Et\"] = \"ET\";\n    /** Finland. */\n    CountryCode[\"Fi\"] = \"FI\";\n    /** Fiji. */\n    CountryCode[\"Fj\"] = \"FJ\";\n    /** Falkland Islands. */\n    CountryCode[\"Fk\"] = \"FK\";\n    /** Faroe Islands. */\n    CountryCode[\"Fo\"] = \"FO\";\n    /** France. */\n    CountryCode[\"Fr\"] = \"FR\";\n    /** Gabon. */\n    CountryCode[\"Ga\"] = \"GA\";\n    /** United Kingdom. */\n    CountryCode[\"Gb\"] = \"GB\";\n    /** Grenada. */\n    CountryCode[\"Gd\"] = \"GD\";\n    /** Georgia. */\n    CountryCode[\"Ge\"] = \"GE\";\n    /** French Guiana. */\n    CountryCode[\"Gf\"] = \"GF\";\n    /** Guernsey. */\n    CountryCode[\"Gg\"] = \"GG\";\n    /** Ghana. */\n    CountryCode[\"Gh\"] = \"GH\";\n    /** Gibraltar. */\n    CountryCode[\"Gi\"] = \"GI\";\n    /** Greenland. */\n    CountryCode[\"Gl\"] = \"GL\";\n    /** Gambia. */\n    CountryCode[\"Gm\"] = \"GM\";\n    /** Guinea. */\n    CountryCode[\"Gn\"] = \"GN\";\n    /** Guadeloupe. */\n    CountryCode[\"Gp\"] = \"GP\";\n    /** Equatorial Guinea. */\n    CountryCode[\"Gq\"] = \"GQ\";\n    /** Greece. */\n    CountryCode[\"Gr\"] = \"GR\";\n    /** South Georgia & South Sandwich Islands. */\n    CountryCode[\"Gs\"] = \"GS\";\n    /** Guatemala. */\n    CountryCode[\"Gt\"] = \"GT\";\n    /** Guinea-Bissau. */\n    CountryCode[\"Gw\"] = \"GW\";\n    /** Guyana. */\n    CountryCode[\"Gy\"] = \"GY\";\n    /** Hong Kong SAR. */\n    CountryCode[\"Hk\"] = \"HK\";\n    /** Heard & McDonald Islands. */\n    CountryCode[\"Hm\"] = \"HM\";\n    /** Honduras. */\n    CountryCode[\"Hn\"] = \"HN\";\n    /** Croatia. */\n    CountryCode[\"Hr\"] = \"HR\";\n    /** Haiti. */\n    CountryCode[\"Ht\"] = \"HT\";\n    /** Hungary. */\n    CountryCode[\"Hu\"] = \"HU\";\n    /** Indonesia. */\n    CountryCode[\"Id\"] = \"ID\";\n    /** Ireland. */\n    CountryCode[\"Ie\"] = \"IE\";\n    /** Israel. */\n    CountryCode[\"Il\"] = \"IL\";\n    /** Isle of Man. */\n    CountryCode[\"Im\"] = \"IM\";\n    /** India. */\n    CountryCode[\"In\"] = \"IN\";\n    /** British Indian Ocean Territory. */\n    CountryCode[\"Io\"] = \"IO\";\n    /** Iraq. */\n    CountryCode[\"Iq\"] = \"IQ\";\n    /** Iran. */\n    CountryCode[\"Ir\"] = \"IR\";\n    /** Iceland. */\n    CountryCode[\"Is\"] = \"IS\";\n    /** Italy. */\n    CountryCode[\"It\"] = \"IT\";\n    /** Jersey. */\n    CountryCode[\"Je\"] = \"JE\";\n    /** Jamaica. */\n    CountryCode[\"Jm\"] = \"JM\";\n    /** Jordan. */\n    CountryCode[\"Jo\"] = \"JO\";\n    /** Japan. */\n    CountryCode[\"Jp\"] = \"JP\";\n    /** Kenya. */\n    CountryCode[\"Ke\"] = \"KE\";\n    /** Kyrgyzstan. */\n    CountryCode[\"Kg\"] = \"KG\";\n    /** Cambodia. */\n    CountryCode[\"Kh\"] = \"KH\";\n    /** Kiribati. */\n    CountryCode[\"Ki\"] = \"KI\";\n    /** Comoros. */\n    CountryCode[\"Km\"] = \"KM\";\n    /** St. Kitts & Nevis. */\n    CountryCode[\"Kn\"] = \"KN\";\n    /** North Korea. */\n    CountryCode[\"Kp\"] = \"KP\";\n    /** South Korea. */\n    CountryCode[\"Kr\"] = \"KR\";\n    /** Kuwait. */\n    CountryCode[\"Kw\"] = \"KW\";\n    /** Cayman Islands. */\n    CountryCode[\"Ky\"] = \"KY\";\n    /** Kazakhstan. */\n    CountryCode[\"Kz\"] = \"KZ\";\n    /** Laos. */\n    CountryCode[\"La\"] = \"LA\";\n    /** Lebanon. */\n    CountryCode[\"Lb\"] = \"LB\";\n    /** St. Lucia. */\n    CountryCode[\"Lc\"] = \"LC\";\n    /** Liechtenstein. */\n    CountryCode[\"Li\"] = \"LI\";\n    /** Sri Lanka. */\n    CountryCode[\"Lk\"] = \"LK\";\n    /** Liberia. */\n    CountryCode[\"Lr\"] = \"LR\";\n    /** Lesotho. */\n    CountryCode[\"Ls\"] = \"LS\";\n    /** Lithuania. */\n    CountryCode[\"Lt\"] = \"LT\";\n    /** Luxembourg. */\n    CountryCode[\"Lu\"] = \"LU\";\n    /** Latvia. */\n    CountryCode[\"Lv\"] = \"LV\";\n    /** Libya. */\n    CountryCode[\"Ly\"] = \"LY\";\n    /** Morocco. */\n    CountryCode[\"Ma\"] = \"MA\";\n    /** Monaco. */\n    CountryCode[\"Mc\"] = \"MC\";\n    /** Moldova. */\n    CountryCode[\"Md\"] = \"MD\";\n    /** Montenegro. */\n    CountryCode[\"Me\"] = \"ME\";\n    /** St. Martin. */\n    CountryCode[\"Mf\"] = \"MF\";\n    /** Madagascar. */\n    CountryCode[\"Mg\"] = \"MG\";\n    /** North Macedonia. */\n    CountryCode[\"Mk\"] = \"MK\";\n    /** Mali. */\n    CountryCode[\"Ml\"] = \"ML\";\n    /** Myanmar (Burma). */\n    CountryCode[\"Mm\"] = \"MM\";\n    /** Mongolia. */\n    CountryCode[\"Mn\"] = \"MN\";\n    /** Macao SAR. */\n    CountryCode[\"Mo\"] = \"MO\";\n    /** Martinique. */\n    CountryCode[\"Mq\"] = \"MQ\";\n    /** Mauritania. */\n    CountryCode[\"Mr\"] = \"MR\";\n    /** Montserrat. */\n    CountryCode[\"Ms\"] = \"MS\";\n    /** Malta. */\n    CountryCode[\"Mt\"] = \"MT\";\n    /** Mauritius. */\n    CountryCode[\"Mu\"] = \"MU\";\n    /** Maldives. */\n    CountryCode[\"Mv\"] = \"MV\";\n    /** Malawi. */\n    CountryCode[\"Mw\"] = \"MW\";\n    /** Mexico. */\n    CountryCode[\"Mx\"] = \"MX\";\n    /** Malaysia. */\n    CountryCode[\"My\"] = \"MY\";\n    /** Mozambique. */\n    CountryCode[\"Mz\"] = \"MZ\";\n    /** Namibia. */\n    CountryCode[\"Na\"] = \"NA\";\n    /** New Caledonia. */\n    CountryCode[\"Nc\"] = \"NC\";\n    /** Niger. */\n    CountryCode[\"Ne\"] = \"NE\";\n    /** Norfolk Island. */\n    CountryCode[\"Nf\"] = \"NF\";\n    /** Nigeria. */\n    CountryCode[\"Ng\"] = \"NG\";\n    /** Nicaragua. */\n    CountryCode[\"Ni\"] = \"NI\";\n    /** Netherlands. */\n    CountryCode[\"Nl\"] = \"NL\";\n    /** Norway. */\n    CountryCode[\"No\"] = \"NO\";\n    /** Nepal. */\n    CountryCode[\"Np\"] = \"NP\";\n    /** Nauru. */\n    CountryCode[\"Nr\"] = \"NR\";\n    /** Niue. */\n    CountryCode[\"Nu\"] = \"NU\";\n    /** New Zealand. */\n    CountryCode[\"Nz\"] = \"NZ\";\n    /** Oman. */\n    CountryCode[\"Om\"] = \"OM\";\n    /** Panama. */\n    CountryCode[\"Pa\"] = \"PA\";\n    /** Peru. */\n    CountryCode[\"Pe\"] = \"PE\";\n    /** French Polynesia. */\n    CountryCode[\"Pf\"] = \"PF\";\n    /** Papua New Guinea. */\n    CountryCode[\"Pg\"] = \"PG\";\n    /** Philippines. */\n    CountryCode[\"Ph\"] = \"PH\";\n    /** Pakistan. */\n    CountryCode[\"Pk\"] = \"PK\";\n    /** Poland. */\n    CountryCode[\"Pl\"] = \"PL\";\n    /** St. Pierre & Miquelon. */\n    CountryCode[\"Pm\"] = \"PM\";\n    /** Pitcairn Islands. */\n    CountryCode[\"Pn\"] = \"PN\";\n    /** Palestinian Territories. */\n    CountryCode[\"Ps\"] = \"PS\";\n    /** Portugal. */\n    CountryCode[\"Pt\"] = \"PT\";\n    /** Paraguay. */\n    CountryCode[\"Py\"] = \"PY\";\n    /** Qatar. */\n    CountryCode[\"Qa\"] = \"QA\";\n    /** Réunion. */\n    CountryCode[\"Re\"] = \"RE\";\n    /** Romania. */\n    CountryCode[\"Ro\"] = \"RO\";\n    /** Serbia. */\n    CountryCode[\"Rs\"] = \"RS\";\n    /** Russia. */\n    CountryCode[\"Ru\"] = \"RU\";\n    /** Rwanda. */\n    CountryCode[\"Rw\"] = \"RW\";\n    /** Saudi Arabia. */\n    CountryCode[\"Sa\"] = \"SA\";\n    /** Solomon Islands. */\n    CountryCode[\"Sb\"] = \"SB\";\n    /** Seychelles. */\n    CountryCode[\"Sc\"] = \"SC\";\n    /** Sudan. */\n    CountryCode[\"Sd\"] = \"SD\";\n    /** Sweden. */\n    CountryCode[\"Se\"] = \"SE\";\n    /** Singapore. */\n    CountryCode[\"Sg\"] = \"SG\";\n    /** St. Helena. */\n    CountryCode[\"Sh\"] = \"SH\";\n    /** Slovenia. */\n    CountryCode[\"Si\"] = \"SI\";\n    /** Svalbard & Jan Mayen. */\n    CountryCode[\"Sj\"] = \"SJ\";\n    /** Slovakia. */\n    CountryCode[\"Sk\"] = \"SK\";\n    /** Sierra Leone. */\n    CountryCode[\"Sl\"] = \"SL\";\n    /** San Marino. */\n    CountryCode[\"Sm\"] = \"SM\";\n    /** Senegal. */\n    CountryCode[\"Sn\"] = \"SN\";\n    /** Somalia. */\n    CountryCode[\"So\"] = \"SO\";\n    /** Suriname. */\n    CountryCode[\"Sr\"] = \"SR\";\n    /** South Sudan. */\n    CountryCode[\"Ss\"] = \"SS\";\n    /** São Tomé & Príncipe. */\n    CountryCode[\"St\"] = \"ST\";\n    /** El Salvador. */\n    CountryCode[\"Sv\"] = \"SV\";\n    /** Sint Maarten. */\n    CountryCode[\"Sx\"] = \"SX\";\n    /** Syria. */\n    CountryCode[\"Sy\"] = \"SY\";\n    /** Eswatini. */\n    CountryCode[\"Sz\"] = \"SZ\";\n    /** Tristan da Cunha. */\n    CountryCode[\"Ta\"] = \"TA\";\n    /** Turks & Caicos Islands. */\n    CountryCode[\"Tc\"] = \"TC\";\n    /** Chad. */\n    CountryCode[\"Td\"] = \"TD\";\n    /** French Southern Territories. */\n    CountryCode[\"Tf\"] = \"TF\";\n    /** Togo. */\n    CountryCode[\"Tg\"] = \"TG\";\n    /** Thailand. */\n    CountryCode[\"Th\"] = \"TH\";\n    /** Tajikistan. */\n    CountryCode[\"Tj\"] = \"TJ\";\n    /** Tokelau. */\n    CountryCode[\"Tk\"] = \"TK\";\n    /** Timor-Leste. */\n    CountryCode[\"Tl\"] = \"TL\";\n    /** Turkmenistan. */\n    CountryCode[\"Tm\"] = \"TM\";\n    /** Tunisia. */\n    CountryCode[\"Tn\"] = \"TN\";\n    /** Tonga. */\n    CountryCode[\"To\"] = \"TO\";\n    /** Turkey. */\n    CountryCode[\"Tr\"] = \"TR\";\n    /** Trinidad & Tobago. */\n    CountryCode[\"Tt\"] = \"TT\";\n    /** Tuvalu. */\n    CountryCode[\"Tv\"] = \"TV\";\n    /** Taiwan. */\n    CountryCode[\"Tw\"] = \"TW\";\n    /** Tanzania. */\n    CountryCode[\"Tz\"] = \"TZ\";\n    /** Ukraine. */\n    CountryCode[\"Ua\"] = \"UA\";\n    /** Uganda. */\n    CountryCode[\"Ug\"] = \"UG\";\n    /** U.S. Outlying Islands. */\n    CountryCode[\"Um\"] = \"UM\";\n    /** United States. */\n    CountryCode[\"Us\"] = \"US\";\n    /** Uruguay. */\n    CountryCode[\"Uy\"] = \"UY\";\n    /** Uzbekistan. */\n    CountryCode[\"Uz\"] = \"UZ\";\n    /** Vatican City. */\n    CountryCode[\"Va\"] = \"VA\";\n    /** St. Vincent & Grenadines. */\n    CountryCode[\"Vc\"] = \"VC\";\n    /** Venezuela. */\n    CountryCode[\"Ve\"] = \"VE\";\n    /** British Virgin Islands. */\n    CountryCode[\"Vg\"] = \"VG\";\n    /** Vietnam. */\n    CountryCode[\"Vn\"] = \"VN\";\n    /** Vanuatu. */\n    CountryCode[\"Vu\"] = \"VU\";\n    /** Wallis & Futuna. */\n    CountryCode[\"Wf\"] = \"WF\";\n    /** Samoa. */\n    CountryCode[\"Ws\"] = \"WS\";\n    /** Kosovo. */\n    CountryCode[\"Xk\"] = \"XK\";\n    /** Yemen. */\n    CountryCode[\"Ye\"] = \"YE\";\n    /** Mayotte. */\n    CountryCode[\"Yt\"] = \"YT\";\n    /** South Africa. */\n    CountryCode[\"Za\"] = \"ZA\";\n    /** Zambia. */\n    CountryCode[\"Zm\"] = \"ZM\";\n    /** Zimbabwe. */\n    CountryCode[\"Zw\"] = \"ZW\";\n    /** Unknown Region. */\n    CountryCode[\"Zz\"] = \"ZZ\";\n})(CountryCode || (CountryCode = {}));\n/** The part of the image that should remain after cropping. */\nexport var CropRegion;\n(function (CropRegion) {\n    /** Keep the bottom of the image. */\n    CropRegion[\"Bottom\"] = \"BOTTOM\";\n    /** Keep the center of the image. */\n    CropRegion[\"Center\"] = \"CENTER\";\n    /** Keep the left of the image. */\n    CropRegion[\"Left\"] = \"LEFT\";\n    /** Keep the right of the image. */\n    CropRegion[\"Right\"] = \"RIGHT\";\n    /** Keep the top of the image. */\n    CropRegion[\"Top\"] = \"TOP\";\n})(CropRegion || (CropRegion = {}));\n/**\n * The three-letter currency codes that represent the world currencies used in stores. These include standard ISO 4217 codes, legacy codes,\n * and non-standard codes.\n *\n */\nexport var CurrencyCode;\n(function (CurrencyCode) {\n    /** United Arab Emirates Dirham (AED). */\n    CurrencyCode[\"Aed\"] = \"AED\";\n    /** Afghan Afghani (AFN). */\n    CurrencyCode[\"Afn\"] = \"AFN\";\n    /** Albanian Lek (ALL). */\n    CurrencyCode[\"All\"] = \"ALL\";\n    /** Armenian Dram (AMD). */\n    CurrencyCode[\"Amd\"] = \"AMD\";\n    /** Netherlands Antillean Guilder. */\n    CurrencyCode[\"Ang\"] = \"ANG\";\n    /** Angolan Kwanza (AOA). */\n    CurrencyCode[\"Aoa\"] = \"AOA\";\n    /** Argentine Pesos (ARS). */\n    CurrencyCode[\"Ars\"] = \"ARS\";\n    /** Australian Dollars (AUD). */\n    CurrencyCode[\"Aud\"] = \"AUD\";\n    /** Aruban Florin (AWG). */\n    CurrencyCode[\"Awg\"] = \"AWG\";\n    /** Azerbaijani Manat (AZN). */\n    CurrencyCode[\"Azn\"] = \"AZN\";\n    /** Bosnia and Herzegovina Convertible Mark (BAM). */\n    CurrencyCode[\"Bam\"] = \"BAM\";\n    /** Barbadian Dollar (BBD). */\n    CurrencyCode[\"Bbd\"] = \"BBD\";\n    /** Bangladesh Taka (BDT). */\n    CurrencyCode[\"Bdt\"] = \"BDT\";\n    /** Bulgarian Lev (BGN). */\n    CurrencyCode[\"Bgn\"] = \"BGN\";\n    /** Bahraini Dinar (BHD). */\n    CurrencyCode[\"Bhd\"] = \"BHD\";\n    /** Burundian Franc (BIF). */\n    CurrencyCode[\"Bif\"] = \"BIF\";\n    /** Bermudian Dollar (BMD). */\n    CurrencyCode[\"Bmd\"] = \"BMD\";\n    /** Brunei Dollar (BND). */\n    CurrencyCode[\"Bnd\"] = \"BND\";\n    /** Bolivian Boliviano (BOB). */\n    CurrencyCode[\"Bob\"] = \"BOB\";\n    /** Brazilian Real (BRL). */\n    CurrencyCode[\"Brl\"] = \"BRL\";\n    /** Bahamian Dollar (BSD). */\n    CurrencyCode[\"Bsd\"] = \"BSD\";\n    /** Bhutanese Ngultrum (BTN). */\n    CurrencyCode[\"Btn\"] = \"BTN\";\n    /** Botswana Pula (BWP). */\n    CurrencyCode[\"Bwp\"] = \"BWP\";\n    /** Belarusian Ruble (BYN). */\n    CurrencyCode[\"Byn\"] = \"BYN\";\n    /** Belarusian Ruble (BYR). */\n    CurrencyCode[\"Byr\"] = \"BYR\";\n    /** Belize Dollar (BZD). */\n    CurrencyCode[\"Bzd\"] = \"BZD\";\n    /** Canadian Dollars (CAD). */\n    CurrencyCode[\"Cad\"] = \"CAD\";\n    /** Congolese franc (CDF). */\n    CurrencyCode[\"Cdf\"] = \"CDF\";\n    /** Swiss Francs (CHF). */\n    CurrencyCode[\"Chf\"] = \"CHF\";\n    /** Chilean Peso (CLP). */\n    CurrencyCode[\"Clp\"] = \"CLP\";\n    /** Chinese Yuan Renminbi (CNY). */\n    CurrencyCode[\"Cny\"] = \"CNY\";\n    /** Colombian Peso (COP). */\n    CurrencyCode[\"Cop\"] = \"COP\";\n    /** Costa Rican Colones (CRC). */\n    CurrencyCode[\"Crc\"] = \"CRC\";\n    /** Cape Verdean escudo (CVE). */\n    CurrencyCode[\"Cve\"] = \"CVE\";\n    /** Czech Koruny (CZK). */\n    CurrencyCode[\"Czk\"] = \"CZK\";\n    /** Djiboutian Franc (DJF). */\n    CurrencyCode[\"Djf\"] = \"DJF\";\n    /** Danish Kroner (DKK). */\n    CurrencyCode[\"Dkk\"] = \"DKK\";\n    /** Dominican Peso (DOP). */\n    CurrencyCode[\"Dop\"] = \"DOP\";\n    /** Algerian Dinar (DZD). */\n    CurrencyCode[\"Dzd\"] = \"DZD\";\n    /** Egyptian Pound (EGP). */\n    CurrencyCode[\"Egp\"] = \"EGP\";\n    /** Eritrean Nakfa (ERN). */\n    CurrencyCode[\"Ern\"] = \"ERN\";\n    /** Ethiopian Birr (ETB). */\n    CurrencyCode[\"Etb\"] = \"ETB\";\n    /** Euro (EUR). */\n    CurrencyCode[\"Eur\"] = \"EUR\";\n    /** Fijian Dollars (FJD). */\n    CurrencyCode[\"Fjd\"] = \"FJD\";\n    /** Falkland Islands Pounds (FKP). */\n    CurrencyCode[\"Fkp\"] = \"FKP\";\n    /** United Kingdom Pounds (GBP). */\n    CurrencyCode[\"Gbp\"] = \"GBP\";\n    /** Georgian Lari (GEL). */\n    CurrencyCode[\"Gel\"] = \"GEL\";\n    /** Ghanaian Cedi (GHS). */\n    CurrencyCode[\"Ghs\"] = \"GHS\";\n    /** Gibraltar Pounds (GIP). */\n    CurrencyCode[\"Gip\"] = \"GIP\";\n    /** Gambian Dalasi (GMD). */\n    CurrencyCode[\"Gmd\"] = \"GMD\";\n    /** Guinean Franc (GNF). */\n    CurrencyCode[\"Gnf\"] = \"GNF\";\n    /** Guatemalan Quetzal (GTQ). */\n    CurrencyCode[\"Gtq\"] = \"GTQ\";\n    /** Guyanese Dollar (GYD). */\n    CurrencyCode[\"Gyd\"] = \"GYD\";\n    /** Hong Kong Dollars (HKD). */\n    CurrencyCode[\"Hkd\"] = \"HKD\";\n    /** Honduran Lempira (HNL). */\n    CurrencyCode[\"Hnl\"] = \"HNL\";\n    /** Croatian Kuna (HRK). */\n    CurrencyCode[\"Hrk\"] = \"HRK\";\n    /** Haitian Gourde (HTG). */\n    CurrencyCode[\"Htg\"] = \"HTG\";\n    /** Hungarian Forint (HUF). */\n    CurrencyCode[\"Huf\"] = \"HUF\";\n    /** Indonesian Rupiah (IDR). */\n    CurrencyCode[\"Idr\"] = \"IDR\";\n    /** Israeli New Shekel (NIS). */\n    CurrencyCode[\"Ils\"] = \"ILS\";\n    /** Indian Rupees (INR). */\n    CurrencyCode[\"Inr\"] = \"INR\";\n    /** Iraqi Dinar (IQD). */\n    CurrencyCode[\"Iqd\"] = \"IQD\";\n    /** Iranian Rial (IRR). */\n    CurrencyCode[\"Irr\"] = \"IRR\";\n    /** Icelandic Kronur (ISK). */\n    CurrencyCode[\"Isk\"] = \"ISK\";\n    /** Jersey Pound. */\n    CurrencyCode[\"Jep\"] = \"JEP\";\n    /** Jamaican Dollars (JMD). */\n    CurrencyCode[\"Jmd\"] = \"JMD\";\n    /** Jordanian Dinar (JOD). */\n    CurrencyCode[\"Jod\"] = \"JOD\";\n    /** Japanese Yen (JPY). */\n    CurrencyCode[\"Jpy\"] = \"JPY\";\n    /** Kenyan Shilling (KES). */\n    CurrencyCode[\"Kes\"] = \"KES\";\n    /** Kyrgyzstani Som (KGS). */\n    CurrencyCode[\"Kgs\"] = \"KGS\";\n    /** Cambodian Riel. */\n    CurrencyCode[\"Khr\"] = \"KHR\";\n    /** Kiribati Dollar (KID). */\n    CurrencyCode[\"Kid\"] = \"KID\";\n    /** Comorian Franc (KMF). */\n    CurrencyCode[\"Kmf\"] = \"KMF\";\n    /** South Korean Won (KRW). */\n    CurrencyCode[\"Krw\"] = \"KRW\";\n    /** Kuwaiti Dinar (KWD). */\n    CurrencyCode[\"Kwd\"] = \"KWD\";\n    /** Cayman Dollars (KYD). */\n    CurrencyCode[\"Kyd\"] = \"KYD\";\n    /** Kazakhstani Tenge (KZT). */\n    CurrencyCode[\"Kzt\"] = \"KZT\";\n    /** Laotian Kip (LAK). */\n    CurrencyCode[\"Lak\"] = \"LAK\";\n    /** Lebanese Pounds (LBP). */\n    CurrencyCode[\"Lbp\"] = \"LBP\";\n    /** Sri Lankan Rupees (LKR). */\n    CurrencyCode[\"Lkr\"] = \"LKR\";\n    /** Liberian Dollar (LRD). */\n    CurrencyCode[\"Lrd\"] = \"LRD\";\n    /** Lesotho Loti (LSL). */\n    CurrencyCode[\"Lsl\"] = \"LSL\";\n    /** Lithuanian Litai (LTL). */\n    CurrencyCode[\"Ltl\"] = \"LTL\";\n    /** Latvian Lati (LVL). */\n    CurrencyCode[\"Lvl\"] = \"LVL\";\n    /** Libyan Dinar (LYD). */\n    CurrencyCode[\"Lyd\"] = \"LYD\";\n    /** Moroccan Dirham. */\n    CurrencyCode[\"Mad\"] = \"MAD\";\n    /** Moldovan Leu (MDL). */\n    CurrencyCode[\"Mdl\"] = \"MDL\";\n    /** Malagasy Ariary (MGA). */\n    CurrencyCode[\"Mga\"] = \"MGA\";\n    /** Macedonia Denar (MKD). */\n    CurrencyCode[\"Mkd\"] = \"MKD\";\n    /** Burmese Kyat (MMK). */\n    CurrencyCode[\"Mmk\"] = \"MMK\";\n    /** Mongolian Tugrik. */\n    CurrencyCode[\"Mnt\"] = \"MNT\";\n    /** Macanese Pataca (MOP). */\n    CurrencyCode[\"Mop\"] = \"MOP\";\n    /** Mauritanian Ouguiya (MRU). */\n    CurrencyCode[\"Mru\"] = \"MRU\";\n    /** Mauritian Rupee (MUR). */\n    CurrencyCode[\"Mur\"] = \"MUR\";\n    /** Maldivian Rufiyaa (MVR). */\n    CurrencyCode[\"Mvr\"] = \"MVR\";\n    /** Malawian Kwacha (MWK). */\n    CurrencyCode[\"Mwk\"] = \"MWK\";\n    /** Mexican Pesos (MXN). */\n    CurrencyCode[\"Mxn\"] = \"MXN\";\n    /** Malaysian Ringgits (MYR). */\n    CurrencyCode[\"Myr\"] = \"MYR\";\n    /** Mozambican Metical. */\n    CurrencyCode[\"Mzn\"] = \"MZN\";\n    /** Namibian Dollar. */\n    CurrencyCode[\"Nad\"] = \"NAD\";\n    /** Nigerian Naira (NGN). */\n    CurrencyCode[\"Ngn\"] = \"NGN\";\n    /** Nicaraguan Córdoba (NIO). */\n    CurrencyCode[\"Nio\"] = \"NIO\";\n    /** Norwegian Kroner (NOK). */\n    CurrencyCode[\"Nok\"] = \"NOK\";\n    /** Nepalese Rupee (NPR). */\n    CurrencyCode[\"Npr\"] = \"NPR\";\n    /** New Zealand Dollars (NZD). */\n    CurrencyCode[\"Nzd\"] = \"NZD\";\n    /** Omani Rial (OMR). */\n    CurrencyCode[\"Omr\"] = \"OMR\";\n    /** Panamian Balboa (PAB). */\n    CurrencyCode[\"Pab\"] = \"PAB\";\n    /** Peruvian Nuevo Sol (PEN). */\n    CurrencyCode[\"Pen\"] = \"PEN\";\n    /** Papua New Guinean Kina (PGK). */\n    CurrencyCode[\"Pgk\"] = \"PGK\";\n    /** Philippine Peso (PHP). */\n    CurrencyCode[\"Php\"] = \"PHP\";\n    /** Pakistani Rupee (PKR). */\n    CurrencyCode[\"Pkr\"] = \"PKR\";\n    /** Polish Zlotych (PLN). */\n    CurrencyCode[\"Pln\"] = \"PLN\";\n    /** Paraguayan Guarani (PYG). */\n    CurrencyCode[\"Pyg\"] = \"PYG\";\n    /** Qatari Rial (QAR). */\n    CurrencyCode[\"Qar\"] = \"QAR\";\n    /** Romanian Lei (RON). */\n    CurrencyCode[\"Ron\"] = \"RON\";\n    /** Serbian dinar (RSD). */\n    CurrencyCode[\"Rsd\"] = \"RSD\";\n    /** Russian Rubles (RUB). */\n    CurrencyCode[\"Rub\"] = \"RUB\";\n    /** Rwandan Franc (RWF). */\n    CurrencyCode[\"Rwf\"] = \"RWF\";\n    /** Saudi Riyal (SAR). */\n    CurrencyCode[\"Sar\"] = \"SAR\";\n    /** Solomon Islands Dollar (SBD). */\n    CurrencyCode[\"Sbd\"] = \"SBD\";\n    /** Seychellois Rupee (SCR). */\n    CurrencyCode[\"Scr\"] = \"SCR\";\n    /** Sudanese Pound (SDG). */\n    CurrencyCode[\"Sdg\"] = \"SDG\";\n    /** Swedish Kronor (SEK). */\n    CurrencyCode[\"Sek\"] = \"SEK\";\n    /** Singapore Dollars (SGD). */\n    CurrencyCode[\"Sgd\"] = \"SGD\";\n    /** Saint Helena Pounds (SHP). */\n    CurrencyCode[\"Shp\"] = \"SHP\";\n    /** Sierra Leonean Leone (SLL). */\n    CurrencyCode[\"Sll\"] = \"SLL\";\n    /** Somali Shilling (SOS). */\n    CurrencyCode[\"Sos\"] = \"SOS\";\n    /** Surinamese Dollar (SRD). */\n    CurrencyCode[\"Srd\"] = \"SRD\";\n    /** South Sudanese Pound (SSP). */\n    CurrencyCode[\"Ssp\"] = \"SSP\";\n    /** Sao Tome And Principe Dobra (STD). */\n    CurrencyCode[\"Std\"] = \"STD\";\n    /** Sao Tome And Principe Dobra (STN). */\n    CurrencyCode[\"Stn\"] = \"STN\";\n    /** Syrian Pound (SYP). */\n    CurrencyCode[\"Syp\"] = \"SYP\";\n    /** Swazi Lilangeni (SZL). */\n    CurrencyCode[\"Szl\"] = \"SZL\";\n    /** Thai baht (THB). */\n    CurrencyCode[\"Thb\"] = \"THB\";\n    /** Tajikistani Somoni (TJS). */\n    CurrencyCode[\"Tjs\"] = \"TJS\";\n    /** Turkmenistani Manat (TMT). */\n    CurrencyCode[\"Tmt\"] = \"TMT\";\n    /** Tunisian Dinar (TND). */\n    CurrencyCode[\"Tnd\"] = \"TND\";\n    /** Tongan Pa'anga (TOP). */\n    CurrencyCode[\"Top\"] = \"TOP\";\n    /** Turkish Lira (TRY). */\n    CurrencyCode[\"Try\"] = \"TRY\";\n    /** Trinidad and Tobago Dollars (TTD). */\n    CurrencyCode[\"Ttd\"] = \"TTD\";\n    /** Taiwan Dollars (TWD). */\n    CurrencyCode[\"Twd\"] = \"TWD\";\n    /** Tanzanian Shilling (TZS). */\n    CurrencyCode[\"Tzs\"] = \"TZS\";\n    /** Ukrainian Hryvnia (UAH). */\n    CurrencyCode[\"Uah\"] = \"UAH\";\n    /** Ugandan Shilling (UGX). */\n    CurrencyCode[\"Ugx\"] = \"UGX\";\n    /** United States Dollars (USD). */\n    CurrencyCode[\"Usd\"] = \"USD\";\n    /** Uruguayan Pesos (UYU). */\n    CurrencyCode[\"Uyu\"] = \"UYU\";\n    /** Uzbekistan som (UZS). */\n    CurrencyCode[\"Uzs\"] = \"UZS\";\n    /** Venezuelan Bolivares (VED). */\n    CurrencyCode[\"Ved\"] = \"VED\";\n    /** Venezuelan Bolivares (VEF). */\n    CurrencyCode[\"Vef\"] = \"VEF\";\n    /** Venezuelan Bolivares (VES). */\n    CurrencyCode[\"Ves\"] = \"VES\";\n    /** Vietnamese đồng (VND). */\n    CurrencyCode[\"Vnd\"] = \"VND\";\n    /** Vanuatu Vatu (VUV). */\n    CurrencyCode[\"Vuv\"] = \"VUV\";\n    /** Samoan Tala (WST). */\n    CurrencyCode[\"Wst\"] = \"WST\";\n    /** Central African CFA Franc (XAF). */\n    CurrencyCode[\"Xaf\"] = \"XAF\";\n    /** East Caribbean Dollar (XCD). */\n    CurrencyCode[\"Xcd\"] = \"XCD\";\n    /** West African CFA franc (XOF). */\n    CurrencyCode[\"Xof\"] = \"XOF\";\n    /** CFP Franc (XPF). */\n    CurrencyCode[\"Xpf\"] = \"XPF\";\n    /** Unrecognized currency. */\n    CurrencyCode[\"Xxx\"] = \"XXX\";\n    /** Yemeni Rial (YER). */\n    CurrencyCode[\"Yer\"] = \"YER\";\n    /** South African Rand (ZAR). */\n    CurrencyCode[\"Zar\"] = \"ZAR\";\n    /** Zambian Kwacha (ZMW). */\n    CurrencyCode[\"Zmw\"] = \"ZMW\";\n})(CurrencyCode || (CurrencyCode = {}));\n/** Possible error codes that can be returned by `CustomerUserError`. */\nexport var CustomerErrorCode;\n(function (CustomerErrorCode) {\n    /** Customer already enabled. */\n    CustomerErrorCode[\"AlreadyEnabled\"] = \"ALREADY_ENABLED\";\n    /** Input email contains an invalid domain name. */\n    CustomerErrorCode[\"BadDomain\"] = \"BAD_DOMAIN\";\n    /** The input value is blank. */\n    CustomerErrorCode[\"Blank\"] = \"BLANK\";\n    /** Input contains HTML tags. */\n    CustomerErrorCode[\"ContainsHtmlTags\"] = \"CONTAINS_HTML_TAGS\";\n    /** Input contains URL. */\n    CustomerErrorCode[\"ContainsUrl\"] = \"CONTAINS_URL\";\n    /** Customer is disabled. */\n    CustomerErrorCode[\"CustomerDisabled\"] = \"CUSTOMER_DISABLED\";\n    /** The input value is invalid. */\n    CustomerErrorCode[\"Invalid\"] = \"INVALID\";\n    /** Multipass token is not valid. */\n    CustomerErrorCode[\"InvalidMultipassRequest\"] = \"INVALID_MULTIPASS_REQUEST\";\n    /** Address does not exist. */\n    CustomerErrorCode[\"NotFound\"] = \"NOT_FOUND\";\n    /** Input password starts or ends with whitespace. */\n    CustomerErrorCode[\"PasswordStartsOrEndsWithWhitespace\"] = \"PASSWORD_STARTS_OR_ENDS_WITH_WHITESPACE\";\n    /** The input value is already taken. */\n    CustomerErrorCode[\"Taken\"] = \"TAKEN\";\n    /** Invalid activation token. */\n    CustomerErrorCode[\"TokenInvalid\"] = \"TOKEN_INVALID\";\n    /** The input value is too long. */\n    CustomerErrorCode[\"TooLong\"] = \"TOO_LONG\";\n    /** The input value is too short. */\n    CustomerErrorCode[\"TooShort\"] = \"TOO_SHORT\";\n    /** Unidentified customer. */\n    CustomerErrorCode[\"UnidentifiedCustomer\"] = \"UNIDENTIFIED_CUSTOMER\";\n})(CustomerErrorCode || (CustomerErrorCode = {}));\n/** List of different delivery method types. */\nexport var DeliveryMethodType;\n(function (DeliveryMethodType) {\n    /** Local Delivery. */\n    DeliveryMethodType[\"Local\"] = \"LOCAL\";\n    /** None. */\n    DeliveryMethodType[\"None\"] = \"NONE\";\n    /** Shipping to a Pickup Point. */\n    DeliveryMethodType[\"PickupPoint\"] = \"PICKUP_POINT\";\n    /** Local Pickup. */\n    DeliveryMethodType[\"PickUp\"] = \"PICK_UP\";\n    /** Retail. */\n    DeliveryMethodType[\"Retail\"] = \"RETAIL\";\n    /** Shipping. */\n    DeliveryMethodType[\"Shipping\"] = \"SHIPPING\";\n})(DeliveryMethodType || (DeliveryMethodType = {}));\n/** Digital wallet, such as Apple Pay, which can be used for accelerated checkouts. */\nexport var DigitalWallet;\n(function (DigitalWallet) {\n    /** Android Pay. */\n    DigitalWallet[\"AndroidPay\"] = \"ANDROID_PAY\";\n    /** Apple Pay. */\n    DigitalWallet[\"ApplePay\"] = \"APPLE_PAY\";\n    /** Google Pay. */\n    DigitalWallet[\"GooglePay\"] = \"GOOGLE_PAY\";\n    /** Shopify Pay. */\n    DigitalWallet[\"ShopifyPay\"] = \"SHOPIFY_PAY\";\n})(DigitalWallet || (DigitalWallet = {}));\n/** The method by which the discount's value is allocated onto its entitled lines. */\nexport var DiscountApplicationAllocationMethod;\n(function (DiscountApplicationAllocationMethod) {\n    /** The value is spread across all entitled lines. */\n    DiscountApplicationAllocationMethod[\"Across\"] = \"ACROSS\";\n    /** The value is applied onto every entitled line. */\n    DiscountApplicationAllocationMethod[\"Each\"] = \"EACH\";\n    /** The value is specifically applied onto a particular line. */\n    DiscountApplicationAllocationMethod[\"One\"] = \"ONE\";\n})(DiscountApplicationAllocationMethod || (DiscountApplicationAllocationMethod = {}));\n/**\n * The lines on the order to which the discount is applied, of the type defined by\n * the discount application's `targetType`. For example, the value `ENTITLED`, combined with a `targetType` of\n * `LINE_ITEM`, applies the discount on all line items that are entitled to the discount.\n * The value `ALL`, combined with a `targetType` of `SHIPPING_LINE`, applies the discount on all shipping lines.\n *\n */\nexport var DiscountApplicationTargetSelection;\n(function (DiscountApplicationTargetSelection) {\n    /** The discount is allocated onto all the lines. */\n    DiscountApplicationTargetSelection[\"All\"] = \"ALL\";\n    /** The discount is allocated onto only the lines that it's entitled for. */\n    DiscountApplicationTargetSelection[\"Entitled\"] = \"ENTITLED\";\n    /** The discount is allocated onto explicitly chosen lines. */\n    DiscountApplicationTargetSelection[\"Explicit\"] = \"EXPLICIT\";\n})(DiscountApplicationTargetSelection || (DiscountApplicationTargetSelection = {}));\n/**\n * The type of line (i.e. line item or shipping line) on an order that the discount is applicable towards.\n *\n */\nexport var DiscountApplicationTargetType;\n(function (DiscountApplicationTargetType) {\n    /** The discount applies onto line items. */\n    DiscountApplicationTargetType[\"LineItem\"] = \"LINE_ITEM\";\n    /** The discount applies onto shipping lines. */\n    DiscountApplicationTargetType[\"ShippingLine\"] = \"SHIPPING_LINE\";\n})(DiscountApplicationTargetType || (DiscountApplicationTargetType = {}));\n/**\n * The type of data that the filter group represents.\n *\n * For more information, refer to [Filter products in a collection with the Storefront API]\n * (https://shopify.dev/api/examples/filter-products).\n *\n */\nexport var FilterType;\n(function (FilterType) {\n    /** A boolean value. */\n    FilterType[\"Boolean\"] = \"BOOLEAN\";\n    /** A list of selectable values. */\n    FilterType[\"List\"] = \"LIST\";\n    /** A range of prices. */\n    FilterType[\"PriceRange\"] = \"PRICE_RANGE\";\n})(FilterType || (FilterType = {}));\n/** List of supported image content types. */\nexport var ImageContentType;\n(function (ImageContentType) {\n    /** A JPG image. */\n    ImageContentType[\"Jpg\"] = \"JPG\";\n    /** A PNG image. */\n    ImageContentType[\"Png\"] = \"PNG\";\n    /** A WEBP image. */\n    ImageContentType[\"Webp\"] = \"WEBP\";\n})(ImageContentType || (ImageContentType = {}));\n/** ISO 639-1 language codes supported by Shopify. */\nexport var LanguageCode;\n(function (LanguageCode) {\n    /** Afrikaans. */\n    LanguageCode[\"Af\"] = \"AF\";\n    /** Akan. */\n    LanguageCode[\"Ak\"] = \"AK\";\n    /** Amharic. */\n    LanguageCode[\"Am\"] = \"AM\";\n    /** Arabic. */\n    LanguageCode[\"Ar\"] = \"AR\";\n    /** Assamese. */\n    LanguageCode[\"As\"] = \"AS\";\n    /** Azerbaijani. */\n    LanguageCode[\"Az\"] = \"AZ\";\n    /** Belarusian. */\n    LanguageCode[\"Be\"] = \"BE\";\n    /** Bulgarian. */\n    LanguageCode[\"Bg\"] = \"BG\";\n    /** Bambara. */\n    LanguageCode[\"Bm\"] = \"BM\";\n    /** Bangla. */\n    LanguageCode[\"Bn\"] = \"BN\";\n    /** Tibetan. */\n    LanguageCode[\"Bo\"] = \"BO\";\n    /** Breton. */\n    LanguageCode[\"Br\"] = \"BR\";\n    /** Bosnian. */\n    LanguageCode[\"Bs\"] = \"BS\";\n    /** Catalan. */\n    LanguageCode[\"Ca\"] = \"CA\";\n    /** Chechen. */\n    LanguageCode[\"Ce\"] = \"CE\";\n    /** Czech. */\n    LanguageCode[\"Cs\"] = \"CS\";\n    /** Church Slavic. */\n    LanguageCode[\"Cu\"] = \"CU\";\n    /** Welsh. */\n    LanguageCode[\"Cy\"] = \"CY\";\n    /** Danish. */\n    LanguageCode[\"Da\"] = \"DA\";\n    /** German. */\n    LanguageCode[\"De\"] = \"DE\";\n    /** Dzongkha. */\n    LanguageCode[\"Dz\"] = \"DZ\";\n    /** Ewe. */\n    LanguageCode[\"Ee\"] = \"EE\";\n    /** Greek. */\n    LanguageCode[\"El\"] = \"EL\";\n    /** English. */\n    LanguageCode[\"En\"] = \"EN\";\n    /** Esperanto. */\n    LanguageCode[\"Eo\"] = \"EO\";\n    /** Spanish. */\n    LanguageCode[\"Es\"] = \"ES\";\n    /** Estonian. */\n    LanguageCode[\"Et\"] = \"ET\";\n    /** Basque. */\n    LanguageCode[\"Eu\"] = \"EU\";\n    /** Persian. */\n    LanguageCode[\"Fa\"] = \"FA\";\n    /** Fulah. */\n    LanguageCode[\"Ff\"] = \"FF\";\n    /** Finnish. */\n    LanguageCode[\"Fi\"] = \"FI\";\n    /** Faroese. */\n    LanguageCode[\"Fo\"] = \"FO\";\n    /** French. */\n    LanguageCode[\"Fr\"] = \"FR\";\n    /** Western Frisian. */\n    LanguageCode[\"Fy\"] = \"FY\";\n    /** Irish. */\n    LanguageCode[\"Ga\"] = \"GA\";\n    /** Scottish Gaelic. */\n    LanguageCode[\"Gd\"] = \"GD\";\n    /** Galician. */\n    LanguageCode[\"Gl\"] = \"GL\";\n    /** Gujarati. */\n    LanguageCode[\"Gu\"] = \"GU\";\n    /** Manx. */\n    LanguageCode[\"Gv\"] = \"GV\";\n    /** Hausa. */\n    LanguageCode[\"Ha\"] = \"HA\";\n    /** Hebrew. */\n    LanguageCode[\"He\"] = \"HE\";\n    /** Hindi. */\n    LanguageCode[\"Hi\"] = \"HI\";\n    /** Croatian. */\n    LanguageCode[\"Hr\"] = \"HR\";\n    /** Hungarian. */\n    LanguageCode[\"Hu\"] = \"HU\";\n    /** Armenian. */\n    LanguageCode[\"Hy\"] = \"HY\";\n    /** Interlingua. */\n    LanguageCode[\"Ia\"] = \"IA\";\n    /** Indonesian. */\n    LanguageCode[\"Id\"] = \"ID\";\n    /** Igbo. */\n    LanguageCode[\"Ig\"] = \"IG\";\n    /** Sichuan Yi. */\n    LanguageCode[\"Ii\"] = \"II\";\n    /** Icelandic. */\n    LanguageCode[\"Is\"] = \"IS\";\n    /** Italian. */\n    LanguageCode[\"It\"] = \"IT\";\n    /** Japanese. */\n    LanguageCode[\"Ja\"] = \"JA\";\n    /** Javanese. */\n    LanguageCode[\"Jv\"] = \"JV\";\n    /** Georgian. */\n    LanguageCode[\"Ka\"] = \"KA\";\n    /** Kikuyu. */\n    LanguageCode[\"Ki\"] = \"KI\";\n    /** Kazakh. */\n    LanguageCode[\"Kk\"] = \"KK\";\n    /** Kalaallisut. */\n    LanguageCode[\"Kl\"] = \"KL\";\n    /** Khmer. */\n    LanguageCode[\"Km\"] = \"KM\";\n    /** Kannada. */\n    LanguageCode[\"Kn\"] = \"KN\";\n    /** Korean. */\n    LanguageCode[\"Ko\"] = \"KO\";\n    /** Kashmiri. */\n    LanguageCode[\"Ks\"] = \"KS\";\n    /** Kurdish. */\n    LanguageCode[\"Ku\"] = \"KU\";\n    /** Cornish. */\n    LanguageCode[\"Kw\"] = \"KW\";\n    /** Kyrgyz. */\n    LanguageCode[\"Ky\"] = \"KY\";\n    /** Luxembourgish. */\n    LanguageCode[\"Lb\"] = \"LB\";\n    /** Ganda. */\n    LanguageCode[\"Lg\"] = \"LG\";\n    /** Lingala. */\n    LanguageCode[\"Ln\"] = \"LN\";\n    /** Lao. */\n    LanguageCode[\"Lo\"] = \"LO\";\n    /** Lithuanian. */\n    LanguageCode[\"Lt\"] = \"LT\";\n    /** Luba-Katanga. */\n    LanguageCode[\"Lu\"] = \"LU\";\n    /** Latvian. */\n    LanguageCode[\"Lv\"] = \"LV\";\n    /** Malagasy. */\n    LanguageCode[\"Mg\"] = \"MG\";\n    /** Maori. */\n    LanguageCode[\"Mi\"] = \"MI\";\n    /** Macedonian. */\n    LanguageCode[\"Mk\"] = \"MK\";\n    /** Malayalam. */\n    LanguageCode[\"Ml\"] = \"ML\";\n    /** Mongolian. */\n    LanguageCode[\"Mn\"] = \"MN\";\n    /** Marathi. */\n    LanguageCode[\"Mr\"] = \"MR\";\n    /** Malay. */\n    LanguageCode[\"Ms\"] = \"MS\";\n    /** Maltese. */\n    LanguageCode[\"Mt\"] = \"MT\";\n    /** Burmese. */\n    LanguageCode[\"My\"] = \"MY\";\n    /** Norwegian (Bokmål). */\n    LanguageCode[\"Nb\"] = \"NB\";\n    /** North Ndebele. */\n    LanguageCode[\"Nd\"] = \"ND\";\n    /** Nepali. */\n    LanguageCode[\"Ne\"] = \"NE\";\n    /** Dutch. */\n    LanguageCode[\"Nl\"] = \"NL\";\n    /** Norwegian Nynorsk. */\n    LanguageCode[\"Nn\"] = \"NN\";\n    /** Norwegian. */\n    LanguageCode[\"No\"] = \"NO\";\n    /** Oromo. */\n    LanguageCode[\"Om\"] = \"OM\";\n    /** Odia. */\n    LanguageCode[\"Or\"] = \"OR\";\n    /** Ossetic. */\n    LanguageCode[\"Os\"] = \"OS\";\n    /** Punjabi. */\n    LanguageCode[\"Pa\"] = \"PA\";\n    /** Polish. */\n    LanguageCode[\"Pl\"] = \"PL\";\n    /** Pashto. */\n    LanguageCode[\"Ps\"] = \"PS\";\n    /** Portuguese. */\n    LanguageCode[\"Pt\"] = \"PT\";\n    /** Portuguese (Brazil). */\n    LanguageCode[\"PtBr\"] = \"PT_BR\";\n    /** Portuguese (Portugal). */\n    LanguageCode[\"PtPt\"] = \"PT_PT\";\n    /** Quechua. */\n    LanguageCode[\"Qu\"] = \"QU\";\n    /** Romansh. */\n    LanguageCode[\"Rm\"] = \"RM\";\n    /** Rundi. */\n    LanguageCode[\"Rn\"] = \"RN\";\n    /** Romanian. */\n    LanguageCode[\"Ro\"] = \"RO\";\n    /** Russian. */\n    LanguageCode[\"Ru\"] = \"RU\";\n    /** Kinyarwanda. */\n    LanguageCode[\"Rw\"] = \"RW\";\n    /** Sindhi. */\n    LanguageCode[\"Sd\"] = \"SD\";\n    /** Northern Sami. */\n    LanguageCode[\"Se\"] = \"SE\";\n    /** Sango. */\n    LanguageCode[\"Sg\"] = \"SG\";\n    /** Sinhala. */\n    LanguageCode[\"Si\"] = \"SI\";\n    /** Slovak. */\n    LanguageCode[\"Sk\"] = \"SK\";\n    /** Slovenian. */\n    LanguageCode[\"Sl\"] = \"SL\";\n    /** Shona. */\n    LanguageCode[\"Sn\"] = \"SN\";\n    /** Somali. */\n    LanguageCode[\"So\"] = \"SO\";\n    /** Albanian. */\n    LanguageCode[\"Sq\"] = \"SQ\";\n    /** Serbian. */\n    LanguageCode[\"Sr\"] = \"SR\";\n    /** Sundanese. */\n    LanguageCode[\"Su\"] = \"SU\";\n    /** Swedish. */\n    LanguageCode[\"Sv\"] = \"SV\";\n    /** Swahili. */\n    LanguageCode[\"Sw\"] = \"SW\";\n    /** Tamil. */\n    LanguageCode[\"Ta\"] = \"TA\";\n    /** Telugu. */\n    LanguageCode[\"Te\"] = \"TE\";\n    /** Tajik. */\n    LanguageCode[\"Tg\"] = \"TG\";\n    /** Thai. */\n    LanguageCode[\"Th\"] = \"TH\";\n    /** Tigrinya. */\n    LanguageCode[\"Ti\"] = \"TI\";\n    /** Turkmen. */\n    LanguageCode[\"Tk\"] = \"TK\";\n    /** Tongan. */\n    LanguageCode[\"To\"] = \"TO\";\n    /** Turkish. */\n    LanguageCode[\"Tr\"] = \"TR\";\n    /** Tatar. */\n    LanguageCode[\"Tt\"] = \"TT\";\n    /** Uyghur. */\n    LanguageCode[\"Ug\"] = \"UG\";\n    /** Ukrainian. */\n    LanguageCode[\"Uk\"] = \"UK\";\n    /** Urdu. */\n    LanguageCode[\"Ur\"] = \"UR\";\n    /** Uzbek. */\n    LanguageCode[\"Uz\"] = \"UZ\";\n    /** Vietnamese. */\n    LanguageCode[\"Vi\"] = \"VI\";\n    /** Volapük. */\n    LanguageCode[\"Vo\"] = \"VO\";\n    /** Wolof. */\n    LanguageCode[\"Wo\"] = \"WO\";\n    /** Xhosa. */\n    LanguageCode[\"Xh\"] = \"XH\";\n    /** Yiddish. */\n    LanguageCode[\"Yi\"] = \"YI\";\n    /** Yoruba. */\n    LanguageCode[\"Yo\"] = \"YO\";\n    /** Chinese. */\n    LanguageCode[\"Zh\"] = \"ZH\";\n    /** Chinese (Simplified). */\n    LanguageCode[\"ZhCn\"] = \"ZH_CN\";\n    /** Chinese (Traditional). */\n    LanguageCode[\"ZhTw\"] = \"ZH_TW\";\n    /** Zulu. */\n    LanguageCode[\"Zu\"] = \"ZU\";\n})(LanguageCode || (LanguageCode = {}));\n/** The set of valid sort keys for the Location query. */\nexport var LocationSortKeys;\n(function (LocationSortKeys) {\n    /** Sort by the `city` value. */\n    LocationSortKeys[\"City\"] = \"CITY\";\n    /** Sort by the `distance` value. */\n    LocationSortKeys[\"Distance\"] = \"DISTANCE\";\n    /** Sort by the `id` value. */\n    LocationSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `name` value. */\n    LocationSortKeys[\"Name\"] = \"NAME\";\n})(LocationSortKeys || (LocationSortKeys = {}));\n/** The possible content types for a media object. */\nexport var MediaContentType;\n(function (MediaContentType) {\n    /** An externally hosted video. */\n    MediaContentType[\"ExternalVideo\"] = \"EXTERNAL_VIDEO\";\n    /** A Shopify hosted image. */\n    MediaContentType[\"Image\"] = \"IMAGE\";\n    /** A 3d model. */\n    MediaContentType[\"Model_3D\"] = \"MODEL_3D\";\n    /** A Shopify hosted video. */\n    MediaContentType[\"Video\"] = \"VIDEO\";\n})(MediaContentType || (MediaContentType = {}));\n/** Host for a Media Resource. */\nexport var MediaHost;\n(function (MediaHost) {\n    /** Host for Vimeo embedded videos. */\n    MediaHost[\"Vimeo\"] = \"VIMEO\";\n    /** Host for YouTube embedded videos. */\n    MediaHost[\"Youtube\"] = \"YOUTUBE\";\n})(MediaHost || (MediaHost = {}));\n/** A menu item type. */\nexport var MenuItemType;\n(function (MenuItemType) {\n    /** An article link. */\n    MenuItemType[\"Article\"] = \"ARTICLE\";\n    /** A blog link. */\n    MenuItemType[\"Blog\"] = \"BLOG\";\n    /** A catalog link. */\n    MenuItemType[\"Catalog\"] = \"CATALOG\";\n    /** A collection link. */\n    MenuItemType[\"Collection\"] = \"COLLECTION\";\n    /** A collection link. */\n    MenuItemType[\"Collections\"] = \"COLLECTIONS\";\n    /** A frontpage link. */\n    MenuItemType[\"Frontpage\"] = \"FRONTPAGE\";\n    /** An http link. */\n    MenuItemType[\"Http\"] = \"HTTP\";\n    /** A page link. */\n    MenuItemType[\"Page\"] = \"PAGE\";\n    /** A product link. */\n    MenuItemType[\"Product\"] = \"PRODUCT\";\n    /** A search link. */\n    MenuItemType[\"Search\"] = \"SEARCH\";\n    /** A shop policy link. */\n    MenuItemType[\"ShopPolicy\"] = \"SHOP_POLICY\";\n})(MenuItemType || (MenuItemType = {}));\n/** Represents the reason for the order's cancellation. */\nexport var OrderCancelReason;\n(function (OrderCancelReason) {\n    /** The customer wanted to cancel the order. */\n    OrderCancelReason[\"Customer\"] = \"CUSTOMER\";\n    /** Payment was declined. */\n    OrderCancelReason[\"Declined\"] = \"DECLINED\";\n    /** The order was fraudulent. */\n    OrderCancelReason[\"Fraud\"] = \"FRAUD\";\n    /** There was insufficient inventory. */\n    OrderCancelReason[\"Inventory\"] = \"INVENTORY\";\n    /** The order was canceled for an unlisted reason. */\n    OrderCancelReason[\"Other\"] = \"OTHER\";\n})(OrderCancelReason || (OrderCancelReason = {}));\n/** Represents the order's current financial status. */\nexport var OrderFinancialStatus;\n(function (OrderFinancialStatus) {\n    /** Displayed as **Authorized**. */\n    OrderFinancialStatus[\"Authorized\"] = \"AUTHORIZED\";\n    /** Displayed as **Paid**. */\n    OrderFinancialStatus[\"Paid\"] = \"PAID\";\n    /** Displayed as **Partially paid**. */\n    OrderFinancialStatus[\"PartiallyPaid\"] = \"PARTIALLY_PAID\";\n    /** Displayed as **Partially refunded**. */\n    OrderFinancialStatus[\"PartiallyRefunded\"] = \"PARTIALLY_REFUNDED\";\n    /** Displayed as **Pending**. */\n    OrderFinancialStatus[\"Pending\"] = \"PENDING\";\n    /** Displayed as **Refunded**. */\n    OrderFinancialStatus[\"Refunded\"] = \"REFUNDED\";\n    /** Displayed as **Voided**. */\n    OrderFinancialStatus[\"Voided\"] = \"VOIDED\";\n})(OrderFinancialStatus || (OrderFinancialStatus = {}));\n/** Represents the order's aggregated fulfillment status for display purposes. */\nexport var OrderFulfillmentStatus;\n(function (OrderFulfillmentStatus) {\n    /** Displayed as **Fulfilled**. All of the items in the order have been fulfilled. */\n    OrderFulfillmentStatus[\"Fulfilled\"] = \"FULFILLED\";\n    /** Displayed as **In progress**. Some of the items in the order have been fulfilled, or a request for fulfillment has been sent to the fulfillment service. */\n    OrderFulfillmentStatus[\"InProgress\"] = \"IN_PROGRESS\";\n    /** Displayed as **On hold**. All of the unfulfilled items in this order are on hold. */\n    OrderFulfillmentStatus[\"OnHold\"] = \"ON_HOLD\";\n    /** Displayed as **Open**. None of the items in the order have been fulfilled. Replaced by \"UNFULFILLED\" status. */\n    OrderFulfillmentStatus[\"Open\"] = \"OPEN\";\n    /** Displayed as **Partially fulfilled**. Some of the items in the order have been fulfilled. */\n    OrderFulfillmentStatus[\"PartiallyFulfilled\"] = \"PARTIALLY_FULFILLED\";\n    /** Displayed as **Pending fulfillment**. A request for fulfillment of some items awaits a response from the fulfillment service. Replaced by \"IN_PROGRESS\" status. */\n    OrderFulfillmentStatus[\"PendingFulfillment\"] = \"PENDING_FULFILLMENT\";\n    /** Displayed as **Restocked**. All of the items in the order have been restocked. Replaced by \"UNFULFILLED\" status. */\n    OrderFulfillmentStatus[\"Restocked\"] = \"RESTOCKED\";\n    /** Displayed as **Scheduled**. All of the unfulfilled items in this order are scheduled for fulfillment at later time. */\n    OrderFulfillmentStatus[\"Scheduled\"] = \"SCHEDULED\";\n    /** Displayed as **Unfulfilled**. None of the items in the order have been fulfilled. */\n    OrderFulfillmentStatus[\"Unfulfilled\"] = \"UNFULFILLED\";\n})(OrderFulfillmentStatus || (OrderFulfillmentStatus = {}));\n/** The set of valid sort keys for the Order query. */\nexport var OrderSortKeys;\n(function (OrderSortKeys) {\n    /** Sort by the `id` value. */\n    OrderSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `processed_at` value. */\n    OrderSortKeys[\"ProcessedAt\"] = \"PROCESSED_AT\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    OrderSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `total_price` value. */\n    OrderSortKeys[\"TotalPrice\"] = \"TOTAL_PRICE\";\n})(OrderSortKeys || (OrderSortKeys = {}));\n/** The set of valid sort keys for the Page query. */\nexport var PageSortKeys;\n(function (PageSortKeys) {\n    /** Sort by the `id` value. */\n    PageSortKeys[\"Id\"] = \"ID\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    PageSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `title` value. */\n    PageSortKeys[\"Title\"] = \"TITLE\";\n    /** Sort by the `updated_at` value. */\n    PageSortKeys[\"UpdatedAt\"] = \"UPDATED_AT\";\n})(PageSortKeys || (PageSortKeys = {}));\n/** The valid values for the types of payment token. */\nexport var PaymentTokenType;\n(function (PaymentTokenType) {\n    /** Apple Pay token type. */\n    PaymentTokenType[\"ApplePay\"] = \"APPLE_PAY\";\n    /** Google Pay token type. */\n    PaymentTokenType[\"GooglePay\"] = \"GOOGLE_PAY\";\n    /** Shopify Pay token type. */\n    PaymentTokenType[\"ShopifyPay\"] = \"SHOPIFY_PAY\";\n    /** Stripe token type. */\n    PaymentTokenType[\"StripeVaultToken\"] = \"STRIPE_VAULT_TOKEN\";\n    /** Vault payment token type. */\n    PaymentTokenType[\"Vault\"] = \"VAULT\";\n})(PaymentTokenType || (PaymentTokenType = {}));\n/** The set of valid sort keys for the ProductCollection query. */\nexport var ProductCollectionSortKeys;\n(function (ProductCollectionSortKeys) {\n    /** Sort by the `best-selling` value. */\n    ProductCollectionSortKeys[\"BestSelling\"] = \"BEST_SELLING\";\n    /** Sort by the `collection-default` value. */\n    ProductCollectionSortKeys[\"CollectionDefault\"] = \"COLLECTION_DEFAULT\";\n    /** Sort by the `created` value. */\n    ProductCollectionSortKeys[\"Created\"] = \"CREATED\";\n    /** Sort by the `id` value. */\n    ProductCollectionSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `manual` value. */\n    ProductCollectionSortKeys[\"Manual\"] = \"MANUAL\";\n    /** Sort by the `price` value. */\n    ProductCollectionSortKeys[\"Price\"] = \"PRICE\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    ProductCollectionSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `title` value. */\n    ProductCollectionSortKeys[\"Title\"] = \"TITLE\";\n})(ProductCollectionSortKeys || (ProductCollectionSortKeys = {}));\n/** The set of valid sort keys for the ProductImage query. */\nexport var ProductImageSortKeys;\n(function (ProductImageSortKeys) {\n    /** Sort by the `created_at` value. */\n    ProductImageSortKeys[\"CreatedAt\"] = \"CREATED_AT\";\n    /** Sort by the `id` value. */\n    ProductImageSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `position` value. */\n    ProductImageSortKeys[\"Position\"] = \"POSITION\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    ProductImageSortKeys[\"Relevance\"] = \"RELEVANCE\";\n})(ProductImageSortKeys || (ProductImageSortKeys = {}));\n/** The set of valid sort keys for the ProductMedia query. */\nexport var ProductMediaSortKeys;\n(function (ProductMediaSortKeys) {\n    /** Sort by the `id` value. */\n    ProductMediaSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `position` value. */\n    ProductMediaSortKeys[\"Position\"] = \"POSITION\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    ProductMediaSortKeys[\"Relevance\"] = \"RELEVANCE\";\n})(ProductMediaSortKeys || (ProductMediaSortKeys = {}));\n/** The set of valid sort keys for the Product query. */\nexport var ProductSortKeys;\n(function (ProductSortKeys) {\n    /** Sort by the `best_selling` value. */\n    ProductSortKeys[\"BestSelling\"] = \"BEST_SELLING\";\n    /** Sort by the `created_at` value. */\n    ProductSortKeys[\"CreatedAt\"] = \"CREATED_AT\";\n    /** Sort by the `id` value. */\n    ProductSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `price` value. */\n    ProductSortKeys[\"Price\"] = \"PRICE\";\n    /** Sort by the `product_type` value. */\n    ProductSortKeys[\"ProductType\"] = \"PRODUCT_TYPE\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    ProductSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `title` value. */\n    ProductSortKeys[\"Title\"] = \"TITLE\";\n    /** Sort by the `updated_at` value. */\n    ProductSortKeys[\"UpdatedAt\"] = \"UPDATED_AT\";\n    /** Sort by the `vendor` value. */\n    ProductSortKeys[\"Vendor\"] = \"VENDOR\";\n})(ProductSortKeys || (ProductSortKeys = {}));\n/** The set of valid sort keys for the ProductVariant query. */\nexport var ProductVariantSortKeys;\n(function (ProductVariantSortKeys) {\n    /** Sort by the `id` value. */\n    ProductVariantSortKeys[\"Id\"] = \"ID\";\n    /** Sort by the `position` value. */\n    ProductVariantSortKeys[\"Position\"] = \"POSITION\";\n    /**\n     * Sort by relevance to the search terms when the `query` parameter is specified on the connection.\n     * Don't use this sort key when no search query is specified.\n     *\n     */\n    ProductVariantSortKeys[\"Relevance\"] = \"RELEVANCE\";\n    /** Sort by the `sku` value. */\n    ProductVariantSortKeys[\"Sku\"] = \"SKU\";\n    /** Sort by the `title` value. */\n    ProductVariantSortKeys[\"Title\"] = \"TITLE\";\n})(ProductVariantSortKeys || (ProductVariantSortKeys = {}));\n/** The checkout charge when the full amount isn't charged at checkout. */\nexport var SellingPlanCheckoutChargeType;\n(function (SellingPlanCheckoutChargeType) {\n    /** The checkout charge is a percentage of the product or variant price. */\n    SellingPlanCheckoutChargeType[\"Percentage\"] = \"PERCENTAGE\";\n    /** The checkout charge is a fixed price amount. */\n    SellingPlanCheckoutChargeType[\"Price\"] = \"PRICE\";\n})(SellingPlanCheckoutChargeType || (SellingPlanCheckoutChargeType = {}));\n/** The different kinds of order transactions. */\nexport var TransactionKind;\n(function (TransactionKind) {\n    /**\n     * An amount reserved against the cardholder's funding source.\n     * Money does not change hands until the authorization is captured.\n     *\n     */\n    TransactionKind[\"Authorization\"] = \"AUTHORIZATION\";\n    /** A transfer of the money that was reserved during the authorization stage. */\n    TransactionKind[\"Capture\"] = \"CAPTURE\";\n    /** Money returned to the customer when they have paid too much. */\n    TransactionKind[\"Change\"] = \"CHANGE\";\n    /** An authorization for a payment taken with an EMV credit card reader. */\n    TransactionKind[\"EmvAuthorization\"] = \"EMV_AUTHORIZATION\";\n    /** An authorization and capture performed together in a single step. */\n    TransactionKind[\"Sale\"] = \"SALE\";\n})(TransactionKind || (TransactionKind = {}));\n/** Transaction statuses describe the status of a transaction. */\nexport var TransactionStatus;\n(function (TransactionStatus) {\n    /** There was an error while processing the transaction. */\n    TransactionStatus[\"Error\"] = \"ERROR\";\n    /** The transaction failed. */\n    TransactionStatus[\"Failure\"] = \"FAILURE\";\n    /** The transaction is pending. */\n    TransactionStatus[\"Pending\"] = \"PENDING\";\n    /** The transaction succeeded. */\n    TransactionStatus[\"Success\"] = \"SUCCESS\";\n})(TransactionStatus || (TransactionStatus = {}));\n/** The accepted types of unit of measurement. */\nexport var UnitPriceMeasurementMeasuredType;\n(function (UnitPriceMeasurementMeasuredType) {\n    /** Unit of measurements representing areas. */\n    UnitPriceMeasurementMeasuredType[\"Area\"] = \"AREA\";\n    /** Unit of measurements representing lengths. */\n    UnitPriceMeasurementMeasuredType[\"Length\"] = \"LENGTH\";\n    /** Unit of measurements representing volumes. */\n    UnitPriceMeasurementMeasuredType[\"Volume\"] = \"VOLUME\";\n    /** Unit of measurements representing weights. */\n    UnitPriceMeasurementMeasuredType[\"Weight\"] = \"WEIGHT\";\n})(UnitPriceMeasurementMeasuredType || (UnitPriceMeasurementMeasuredType = {}));\n/** The valid units of measurement for a unit price measurement. */\nexport var UnitPriceMeasurementMeasuredUnit;\n(function (UnitPriceMeasurementMeasuredUnit) {\n    /** 100 centiliters equals 1 liter. */\n    UnitPriceMeasurementMeasuredUnit[\"Cl\"] = \"CL\";\n    /** 100 centimeters equals 1 meter. */\n    UnitPriceMeasurementMeasuredUnit[\"Cm\"] = \"CM\";\n    /** Metric system unit of weight. */\n    UnitPriceMeasurementMeasuredUnit[\"G\"] = \"G\";\n    /** 1 kilogram equals 1000 grams. */\n    UnitPriceMeasurementMeasuredUnit[\"Kg\"] = \"KG\";\n    /** Metric system unit of volume. */\n    UnitPriceMeasurementMeasuredUnit[\"L\"] = \"L\";\n    /** Metric system unit of length. */\n    UnitPriceMeasurementMeasuredUnit[\"M\"] = \"M\";\n    /** Metric system unit of area. */\n    UnitPriceMeasurementMeasuredUnit[\"M2\"] = \"M2\";\n    /** 1 cubic meter equals 1000 liters. */\n    UnitPriceMeasurementMeasuredUnit[\"M3\"] = \"M3\";\n    /** 1000 milligrams equals 1 gram. */\n    UnitPriceMeasurementMeasuredUnit[\"Mg\"] = \"MG\";\n    /** 1000 milliliters equals 1 liter. */\n    UnitPriceMeasurementMeasuredUnit[\"Ml\"] = \"ML\";\n    /** 1000 millimeters equals 1 meter. */\n    UnitPriceMeasurementMeasuredUnit[\"Mm\"] = \"MM\";\n})(UnitPriceMeasurementMeasuredUnit || (UnitPriceMeasurementMeasuredUnit = {}));\n/** Systems of weights and measures. */\nexport var UnitSystem;\n(function (UnitSystem) {\n    /** Imperial system of weights and measures. */\n    UnitSystem[\"ImperialSystem\"] = \"IMPERIAL_SYSTEM\";\n    /** Metric system of weights and measures. */\n    UnitSystem[\"MetricSystem\"] = \"METRIC_SYSTEM\";\n})(UnitSystem || (UnitSystem = {}));\n/** Units of measurement for weight. */\nexport var WeightUnit;\n(function (WeightUnit) {\n    /** Metric system unit of mass. */\n    WeightUnit[\"Grams\"] = \"GRAMS\";\n    /** 1 kilogram equals 1000 grams. */\n    WeightUnit[\"Kilograms\"] = \"KILOGRAMS\";\n    /** Imperial system unit of mass. */\n    WeightUnit[\"Ounces\"] = \"OUNCES\";\n    /** 1 pound equals 16 ounces. */\n    WeightUnit[\"Pounds\"] = \"POUNDS\";\n})(WeightUnit || (WeightUnit = {}));\n","import { createContext } from 'react';\nexport const CartContext = createContext(null);\n"],"names":["createContext"],"mappings":"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GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,KAEpB,EAAY,GAAQ,IACxB,GAAG,GAAgB,GAAc,CAAE,EAAC,EAE7B,GAAI,GACX,AAAC,UAAU,EAAY,CAEnB,EAAW,OAAY,SAEvB,EAAW,OAAY,SAEvB,EAAW,KAAU,OAErB,EAAW,MAAW,QAEtB,EAAW,IAAS,KACxB,GAAG,GAAe,GAAa,CAAE,EAAC,EAM3B,GAAI,GACX,AAAC,UAAU,EAAc,CAErB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,MAEtB,EAAa,IAAS,KAC1B,GAAG,GAAiB,GAAe,CAAE,EAAC,EAE/B,GAAI,GACX,AAAC,UAAU,EAAmB,CAE1B,EAAkB,eAAoB,kBAEtC,EAAkB,UAAe,aAEjC,EAAkB,MAAW,QAE7B,EAAkB,iBAAsB,qBAExC,EAAkB,YAAiB,eAEnC,EAAkB,iBAAsB,oBAExC,EAAkB,QAAa,UAE/B,EAAkB,wBAA6B,4BAE/C,EAAkB,SAAc,YAEhC,EAAkB,mCAAwC,0CAE1D,EAAkB,MAAW,QAE7B,EAAkB,aAAkB,gBAEpC,EAAkB,QAAa,WAE/B,EAAkB,SAAc,YAEhC,EAAkB,qBAA0B,uBAChD,GAAG,GAAsB,GAAoB,CAAE,EAAC,EAEzC,GAAI,GACX,AAAC,UAAU,EAAoB,CAE3B,EAAmB,MAAW,QAE9B,EAAmB,KAAU,OAE7B,EAAmB,YAAiB,eAEpC,EAAmB,OAAY,UAE/B,EAAmB,OAAY,SAE/B,EAAmB,SAAc,UACrC,GAAG,GAAuB,GAAqB,CAAE,EAAC,EAE3C,GAAI,GACX,AAAC,UAAU,EAAe,CAEtB,EAAc,WAAgB,cAE9B,EAAc,SAAc,YAE5B,EAAc,UAAe,aAE7B,EAAc,WAAgB,aAClC,GAAG,GAAkB,GAAgB,CAAE,EAAC,EAEjC,GAAI,GACX,AAAC,UAAU,EAAqC,CAE5C,EAAoC,OAAY,SAEhD,EAAoC,KAAU,OAE9C,EAAoC,IAAS,KACjD,GAAG,GAAwC,GAAsC,CAAE,EAAC,EAQ7E,GAAI,GACX,AAAC,UAAU,EAAoC,CAE3C,EAAmC,IAAS,MAE5C,EAAmC,SAAc,WAEjD,EAAmC,SAAc,UACrD,GAAG,GAAuC,GAAqC,CAAE,EAAC,EAK3E,GAAI,GACX,AAAC,UAAU,EAA+B,CAEtC,EAA8B,SAAc,YAE5C,EAA8B,aAAkB,eACpD,GAAG,GAAkC,GAAgC,CAAE,EAAC,EAQjE,GAAI,GACX,AAAC,UAAU,EAAY,CAEnB,EAAW,QAAa,UAExB,EAAW,KAAU,OAErB,EAAW,WAAgB,aAC/B,GAAG,GAAe,GAAa,CAAE,EAAC,EAE3B,GAAI,GACX,AAAC,UAAU,EAAkB,CAEzB,EAAiB,IAAS,MAE1B,EAAiB,IAAS,MAE1B,EAAiB,KAAU,MAC/B,GAAG,GAAqB,GAAmB,CAAE,EAAC,EAEvC,GAAI,GACX,AAAC,UAAU,EAAc,CAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KAErB,EAAa,GAAQ,KA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"}